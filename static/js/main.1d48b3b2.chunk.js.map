{"version":3,"sources":["components/TableCell.jsx","components/TableRow.jsx","components/Navbar.jsx","components/Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["TableCell","className","onClick","this","props","changeColor","onMouseDown","mouseDown","onMouseUp","mouseUp","onMouseEnter","mouseEnter","Component","TableRow","tableCols","i","colsNum","push","toString","NavBar","addrow","addcol","removeRow","removeCol","clearAll","fillAll","fillUncolored","onChange","setColor","value","Table","state","rows","cols","color","coloring","bind","setState","event","target","style","backgroundColor","document","querySelectorAll","forEach","e","tableRows","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1d48b3b2.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nclass TableCell extends Component {\n  render() {\n    return (\n      <td\n        className=\"cell\"\n        onClick={this.props.changeColor}\n        onMouseDown={this.props.mouseDown}\n        onMouseUp={this.props.mouseUp}\n        onMouseEnter={this.props.mouseEnter}\n      ></td>\n    );\n  }\n}\n\nexport default TableCell;\n","import { Component } from \"react\";\nimport TableCell from \"./TableCell\";\n\nclass TableRow extends Component {\n  render() {\n    let tableCols = [];\n    for (let i = 0; i <= this.props.colsNum; i++) {\n      tableCols.push(\n        <TableCell\n          key={i.toString() + \"c\"}\n          changeColor={this.props.changeColor}\n          mouseDown={this.props.mouseDown}\n          mouseUp={this.props.mouseUp}\n          mouseEnter={this.props.mouseEnter}\n        />\n      );\n    }\n    return <tr>{tableCols}</tr>;\n  }\n}\n\nexport default TableRow;\n","import {Component} from 'react';\n\nclass NavBar extends Component {\n    \n    render(){\n        return <div>\n            <div className=\"buttons\">\n                <button onClick={this.props.addrow} className=\"btn-success btn-lg\">add row</button>\n                <button onClick={this.props.addcol} className=\"btn-success btn-lg\">add col</button>\n                <button onClick={this.props.removeRow} className=\"btn-success btn-lg\">remove row</button>\n                <button onClick={this.props.removeCol} className=\"btn-success btn-lg\">remove col</button>\n                <button onClick={this.props.clearAll} className=\"btn-success btn-lg\">clear all</button>\n                <button onClick={this.props.fillAll} className=\"btn-success btn-lg\">fill all</button>\n                <button onClick={this.props.fillUncolored} className=\"btn-success btn-lg\">fillUncolored</button>\n            </div>\n            <div className=\"select-container\"> \n                <select onChange={this.props.setColor}>\n                    <option value=\"#FF0000\">Red</option>\n                    <option value=\"#00FF00\">Green</option>\n                    <option value=\"#0000FF\">Blue</option>\n                </select>\n            </div>\n            \n            \n        </div>\n    }\n}\n\nexport default NavBar;","import { Component } from \"react\";\nimport TableRow from \"./TableRow\";\nimport NavBar from \"./Navbar\";\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: 0,\n      cols: 0,\n      color: \"#FFFFFF\",\n      coloring: false,\n    };\n    this.addrow = this.addrow.bind(this);\n    this.addcol = this.addcol.bind(this);\n    this.removeRow = this.removeRow.bind(this);\n    this.removeCol = this.removeCol.bind(this);\n    this.setColor = this.setColor.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n    this.clearAll = this.clearAll.bind(this);\n    this.fillAll = this.fillAll.bind(this);\n    this.fillUncolored = this.fillUncolored.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseEnter = this.mouseEnter.bind(this);\n  }\n\n  addrow() {\n    this.setState({\n      rows: this.state.rows + 1,\n    });\n  }\n  addcol() {\n    this.setState({\n      cols: this.state.cols + 1,\n    });\n  }\n  removeRow() {\n    if (this.state.rows > 0) {\n      this.setState({\n        rows: this.state.rows - 1,\n      });\n    } else {\n      this.setState({\n        cols: 0,\n      });\n    }\n  }\n  removeCol() {\n    if (this.state.cols > 0) {\n      this.setState({\n        cols: this.state.cols - 1,\n      });\n    } else {\n      this.setState({\n        rows: 0,\n      });\n    }\n  }\n  setColor(event) {\n    this.setState({\n      color: event.target.value,\n    });\n  }\n  changeColor(event) {\n    event.target.style.backgroundColor = this.state.color;\n  }\n\n  clearAll() {\n    document.querySelectorAll(\"td\").forEach((e) => {\n      e.style.backgroundColor = \"\";\n    });\n  }\n  fillAll() {\n    document.querySelectorAll(\"td\").forEach((e) => {\n      e.style.backgroundColor = this.state.color;\n    });\n  }\n  fillUncolored() {\n    document.querySelectorAll(\"td\").forEach((e) => {\n      if (e.style.backgroundColor === \"\") {\n        e.style.backgroundColor = this.state.color;\n      }\n    });\n  }\n  mouseDown() {\n    this.setState({\n      coloring: true,\n    });\n  }\n  mouseUp() {\n    this.setState({\n      coloring: false,\n    });\n  }\n  mouseEnter(event) {\n    if (this.state.coloring) {\n      event.target.style.backgroundColor = this.state.color;\n    }\n  }\n\n  render() {\n    let tableRows = [];\n    for (let i = 0; i <= this.state.rows; i++) {\n      tableRows.push(\n        <TableRow\n          key={i.toString() + \"r\"}\n          colsNum={this.state.cols}\n          changeColor={this.changeColor}\n          mouseDown={this.mouseDown}\n          mouseUp={this.mouseUp}\n          mouseEnter={this.mouseEnter}\n        />\n      );\n    }\n    return (\n      <div className=\"container\">\n        <NavBar\n          addrow={this.addrow}\n          addcol={this.addcol}\n          removeRow={this.removeRow}\n          removeCol={this.removeCol}\n          setColor={this.setColor}\n          clearAll={this.clearAll}\n          fillAll={this.fillAll}\n          fillUncolored={this.fillUncolored}\n        />\n        <br></br>\n        <table>\n          <tbody>{tableRows}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","\nimport \"./App.css\";\nimport Table from \"./components/Table\";\n\n  function App(){\n    return <div>\n        <Table />\n      </div>\n    ;\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}